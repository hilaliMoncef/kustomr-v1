# Generated by Django 3.0.5 on 2020-05-02 10:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='posts/medias/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_name', models.CharField(max_length=255)),
                ('store_type', models.CharField(choices=[('FOOD', 'Restaurant & bar'), ('SUPERMARKET', 'Supermarch√©')], default='FOOD', max_length=40)),
                ('store_visits', models.CharField(choices=[('SM', 'Entre 50 et 200'), ('MD', 'Entre 200 et 500'), ('LG', 'Entre 500 et 1000'), ('XL', '1000+')], default='SM', max_length=40)),
                ('store_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('store_adress', models.TextField(blank=True, null=True)),
                ('website', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('facebook', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('instagram', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('youtube', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('linkedin', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('pinterest', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('snapchat', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('tripadvisor', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vendor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VendorOpeningHours',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monday', models.CharField(blank=True, default='-', max_length=100)),
                ('tuesday', models.CharField(blank=True, default='-', max_length=100)),
                ('wednesday', models.CharField(blank=True, default='-', max_length=100)),
                ('thursday', models.CharField(blank=True, default='-', max_length=100)),
                ('friday', models.CharField(blank=True, default='-', max_length=100)),
                ('saturday', models.CharField(blank=True, default='-', max_length=100)),
                ('sunday', models.CharField(blank=True, default='-', max_length=100)),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='opening_hours', to='Vendor.Vendor')),
            ],
        ),
        migrations.CreateModel(
            name='RewardCardLayout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.FileField(blank=True, default=None, null=True, upload_to='fidelity/icons/')),
                ('logo', models.FileField(blank=True, default=None, null=True, upload_to='fidelity/logos/')),
                ('bg_color', models.CharField(default='#000000', max_length=7)),
                ('text_color', models.CharField(default='#ffffff', max_length=7)),
                ('vendor', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reward_card_layout', to='Vendor.Vendor')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, default=None, null=True, upload_to='offers/')),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('cost', models.IntegerField()),
                ('start_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='Vendor.Vendor')),
            ],
        ),
        migrations.CreateModel(
            name='MailCampaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('date_published', models.DateTimeField()),
                ('processed', models.BooleanField(default=False)),
                ('date_processed', models.DateTimeField(blank=True, null=True)),
                ('image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mail_campaigns', to='Vendor.Media')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mail_campaigns', to='Vendor.Vendor')),
            ],
        ),
        migrations.CreateModel(
            name='InstagramEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('post_type', models.CharField(choices=[('S', 'Story'), ('P', 'Post')], default='P', max_length=40)),
                ('processed', models.BooleanField(default=False)),
                ('date_processed', models.DateTimeField(blank=True, null=True)),
                ('date_published_char', models.CharField(max_length=255)),
                ('date_published', models.DateTimeField()),
                ('images', models.ManyToManyField(related_name='ig_events', to='Vendor.Media')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ig_events', to='Vendor.Vendor')),
            ],
        ),
        migrations.CreateModel(
            name='FacebookEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('post_type', models.CharField(choices=[('S', 'Story'), ('P', 'Post')], default='P', max_length=40)),
                ('processed', models.BooleanField(default=False)),
                ('date_processed', models.DateTimeField(blank=True, null=True)),
                ('date_published_char', models.CharField(max_length=255)),
                ('date_published', models.DateTimeField()),
                ('images', models.ManyToManyField(related_name='fb_events', to='Vendor.Media')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fb_events', to='Vendor.Vendor')),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, default=None, null=True, upload_to='discounts/')),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('min_points', models.IntegerField(default=0)),
                ('start_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discounts', to='Vendor.Vendor')),
            ],
        ),
    ]
